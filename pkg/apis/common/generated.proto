/*
Copyright 2020 BlackRock, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package github.com.argoproj.argo_events.pkg.apis.common;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "common";

// Amount represent a numeric amount.
message Amount {
  optional bytes value = 1;
}

// Backoff for an operation
message Backoff {
  // Duration is the duration in nanoseconds
  optional int64 duration = 1;

  // Duration is multiplied by factor each iteration
  optional Amount factor = 2;

  // The amount of jitter applied each iteration
  optional Amount jitter = 3;

  // Exit with error after this many steps
  optional int32 steps = 4;
}

// Condition contains details about resource state
message Condition {
  // Condition type.
  // +required
  optional string type = 1;

  // Condition status, True, False or Unknown.
  // +required
  optional string status = 2;

  // Last time the condition transitioned from one status to another.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 3;

  // Unique, this should be a short, machine understandable string that gives the reason
  // for condition's last transition. For example, "ImageNotFound"
  // +optional
  optional string reason = 4;

  // Human-readable message indicating details about last transition.
  // +optional
  optional string message = 5;
}

// Resource represent arbitrary structured data.
message Resource {
  optional bytes value = 1;
}

// S3Artifact contains information about an S3 connection and bucket
message S3Artifact {
  optional string endpoint = 1;

  optional S3Bucket bucket = 2;

  optional string region = 3;

  optional bool insecure = 4;

  optional k8s.io.api.core.v1.SecretKeySelector accessKey = 5;

  optional k8s.io.api.core.v1.SecretKeySelector secretKey = 6;

  repeated string events = 7;

  optional S3Filter filter = 8;
}

// S3Bucket contains information to describe an S3 Bucket
message S3Bucket {
  optional string key = 1;

  optional string name = 2;
}

// S3Filter represents filters to apply to bucket nofifications for specifying constraints on objects
message S3Filter {
  optional string prefix = 1;

  optional string suffix = 2;
}

// Status is a common structure which can be used for Status field.
message Status {
  // Conditions are the latest available observations of a resource's current state.
  // +optional
  // +patchMergeKey=type
  // +patchStrategy=merge
  repeated Condition conditions = 1;
}

