// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

package gateways

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GatewayConfig struct {
	Src                  string   `protobuf:"bytes,1,opt,name=src" json:"src,omitempty"`
	Config               string   `protobuf:"bytes,2,opt,name=config" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayConfig) Reset()         { *m = GatewayConfig{} }
func (m *GatewayConfig) String() string { return proto.CompactTextString(m) }
func (*GatewayConfig) ProtoMessage()    {}
func (*GatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_a64e64f34c144cd4, []int{0}
}
func (m *GatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayConfig.Unmarshal(m, b)
}
func (m *GatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayConfig.Marshal(b, m, deterministic)
}
func (dst *GatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayConfig.Merge(dst, src)
}
func (m *GatewayConfig) XXX_Size() int {
	return xxx_messageInfo_GatewayConfig.Size(m)
}
func (m *GatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayConfig proto.InternalMessageInfo

func (m *GatewayConfig) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *GatewayConfig) GetConfig() string {
	if m != nil {
		return m.Config
	}
	return ""
}

type Event struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_gateway_a64e64f34c144cd4, []int{1}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GatewayConfig)(nil), "gateways.GatewayConfig")
	proto.RegisterType((*Event)(nil), "gateways.Event")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewayExecutorClient is the client API for GatewayExecutor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayExecutorClient interface {
	// Obtains the configuration available within the given GatewayConfig.  Result events are
	// streamed back to client.
	RunGateway(ctx context.Context, in *GatewayConfig, opts ...grpc.CallOption) (GatewayExecutor_RunGatewayClient, error)
}

type gatewayExecutorClient struct {
	cc *grpc.ClientConn
}

func NewGatewayExecutorClient(cc *grpc.ClientConn) GatewayExecutorClient {
	return &gatewayExecutorClient{cc}
}

func (c *gatewayExecutorClient) RunGateway(ctx context.Context, in *GatewayConfig, opts ...grpc.CallOption) (GatewayExecutor_RunGatewayClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GatewayExecutor_serviceDesc.Streams[0], "/gateways.GatewayExecutor/RunGateway", opts...)
	if err != nil {
		return nil, err
	}
	x := &gatewayExecutorRunGatewayClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GatewayExecutor_RunGatewayClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type gatewayExecutorRunGatewayClient struct {
	grpc.ClientStream
}

func (x *gatewayExecutorRunGatewayClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GatewayExecutorServer is the server API for GatewayExecutor service.
type GatewayExecutorServer interface {
	// Obtains the configuration available within the given GatewayConfig.  Result events are
	// streamed back to client.
	RunGateway(*GatewayConfig, GatewayExecutor_RunGatewayServer) error
}

func RegisterGatewayExecutorServer(s *grpc.Server, srv GatewayExecutorServer) {
	s.RegisterService(&_GatewayExecutor_serviceDesc, srv)
}

func _GatewayExecutor_RunGateway_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GatewayConfig)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GatewayExecutorServer).RunGateway(m, &gatewayExecutorRunGatewayServer{stream})
}

type GatewayExecutor_RunGatewayServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type gatewayExecutorRunGatewayServer struct {
	grpc.ServerStream
}

func (x *gatewayExecutorRunGatewayServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _GatewayExecutor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gateways.GatewayExecutor",
	HandlerType: (*GatewayExecutorServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RunGateway",
			Handler:       _GatewayExecutor_RunGateway_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gateway.proto",
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor_gateway_a64e64f34c144cd4) }

var fileDescriptor_gateway_a64e64f34c144cd4 = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4f, 0x2c, 0x49,
	0x2d, 0x4f, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0x72, 0x8b, 0x95, 0x2c,
	0xb9, 0x78, 0xdd, 0x21, 0x6c, 0xe7, 0xfc, 0xbc, 0xb4, 0xcc, 0x74, 0x21, 0x01, 0x2e, 0xe6, 0xe2,
	0xa2, 0x64, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x10, 0x53, 0x48, 0x8c, 0x8b, 0x2d, 0x19,
	0x2c, 0x27, 0xc1, 0x04, 0x16, 0x84, 0xf2, 0x94, 0xa4, 0xb9, 0x58, 0x5d, 0xcb, 0x52, 0xf3, 0x4a,
	0x84, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12, 0xc1, 0x7a, 0x78, 0x82, 0xc0, 0x6c, 0x23, 0x5f,
	0x2e, 0x7e, 0xa8, 0xb9, 0xae, 0x15, 0xa9, 0xc9, 0xa5, 0x25, 0xf9, 0x45, 0x42, 0x56, 0x5c, 0x5c,
	0x41, 0xa5, 0x79, 0x50, 0x51, 0x21, 0x71, 0x3d, 0x98, 0x1b, 0xf4, 0x50, 0x1c, 0x20, 0xc5, 0x8f,
	0x90, 0x00, 0x1b, 0xaf, 0xc4, 0x60, 0xc0, 0xe8, 0x24, 0xc9, 0xc5, 0x9d, 0x58, 0x94, 0x9e, 0x5f,
	0x50, 0x94, 0x9f, 0xa5, 0x97, 0x99, 0xef, 0xc4, 0x01, 0xd5, 0x52, 0x1c, 0xc0, 0x98, 0xc4, 0x06,
	0xf6, 0x92, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x02, 0xbf, 0x1d, 0xa6, 0xe3, 0x00, 0x00, 0x00,
}
