{
  "swagger": "2.0",
  "info": {
   "title": "Argo-Events",
   "version": "v0.6"
  },
  "paths": {},
  "definitions": {
   "v1alpha1.Gateway": {
    "description": "Gateway is the definition of a gateway resource",
    "required": [
     "status",
     "spec"
    ],
    "properties": {
     "spec": {
      "$ref": "#/definitions/v1alpha1.GatewaySpec"
     },
     "status": {
      "$ref": "#/definitions/v1alpha1.GatewayStatus"
     }
    }
   },
   "v1alpha1.GatewayList": {
    "description": "GatewayList is the list of Gateway resources",
    "required": [
     "items"
    ],
    "properties": {
     "items": {
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.Gateway"
      }
     }
    }
   },
   "v1alpha1.GatewayNotificationWatcher": {
    "description": "GatewayNotificationWatcher is the gateway interested in listening to notifications from this gateway",
    "required": [
     "name",
     "port",
     "endpoint"
    ],
    "properties": {
     "endpoint": {
      "description": "Endpoint is REST API endpoint to post event to. Events are sent using HTTP POST method to this endpoint.",
      "type": "string"
     },
     "name": {
      "description": "Name is the gateway name",
      "type": "string"
     },
     "port": {
      "description": "Port is http server port on which gateway is running",
      "type": "string"
     }
    }
   },
   "v1alpha1.GatewaySpec": {
    "description": "GatewaySpec represents gateway specifications",
    "required": [
     "type",
     "version",
     "dispatchMechanism"
    ],
    "properties": {
     "configMap": {
      "description": "ConfigMap is name of the configmap for gateway-processor",
      "type": "string"
     },
     "dispatchMechanism": {
      "description": "DispatchMechanism is the underlying mechanism used to send events from gateway to watchers(components interested in listening to event from this gateway)",
      "type": "string"
     },
     "httpServerPort": {
      "description": "HTTPServerPort if provided is used to communicate between gateway client and server over http",
      "type": "string"
     },
     "imageVersion": {
      "description": "ImageVersion is the version for gateway components images to run",
      "type": "string"
     },
     "rpcPort": {
      "description": "RPCPort if provided is used to communicate between gRPC gateway client and gRPC gateway server",
      "type": "string"
     },
     "type": {
      "description": "Type is the type of gateway",
      "type": "string"
     },
     "version": {
      "description": "Version is used for marking event version",
      "type": "string"
     },
     "watchers": {
      "description": "Watchers are components which are interested listening to notifications from this gateway These only need to be specified when gateway dispatch mechanism is through HTTP POST notifications. In future, support for NATS, KAFKA will be added as a means to dispatch notifications in which case specifying watchers would be unnecessary.",
      "$ref": "#/definitions/v1alpha1.NotificationWatchers"
     }
    }
   },
   "v1alpha1.GatewayStatus": {
    "description": "GatewayStatus contains information about the status of a gateway.",
    "required": [
     "phase"
    ],
    "properties": {
     "message": {
      "description": "Message is a human readable string indicating details about a gateway in its phase",
      "type": "string"
     },
     "nodes": {
      "description": "Nodes is a mapping between a node ID and the node's status it records the states for the configurations of gateway.",
      "type": "object",
      "additionalProperties": {
       "$ref": "#/definitions/v1alpha1.NodeStatus"
      }
     },
     "phase": {
      "description": "Phase is the high-level summary of the gateway",
      "type": "string"
     }
    }
   },
   "v1alpha1.NodeStatus": {
    "description": "NodeStatus describes the status for an individual node in the gateway configurations. A single node can represent one configuration.",
    "required": [
     "id",
     "timeID",
     "name",
     "displayName",
     "phase"
    ],
    "properties": {
     "displayName": {
      "description": "DisplayName is the human readable representation of the node",
      "type": "string"
     },
     "id": {
      "description": "ID is a unique identifier of a node within a sensor It is a hash of the node name",
      "type": "string"
     },
     "message": {
      "description": "Message store data or something to save for configuration",
      "type": "string"
     },
     "name": {
      "description": "Name is a unique name in the node tree used to generate the node ID",
      "type": "string"
     },
     "phase": {
      "description": "Phase of the node",
      "type": "string"
     },
     "timeID": {
      "description": "TimeID is used to resolve events arriving out of order for same node",
      "type": "string"
     }
    }
   },
   "v1alpha1.NotificationWatchers": {
    "description": "NotificationWatchers are components which are interested listening to notifications from this gateway",
    "properties": {
     "gateways": {
      "description": "Gateways is the list of gateways interested in listening to notifications from this gateway",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.GatewayNotificationWatcher"
      }
     },
     "sensors": {
      "description": "Sensors is the list of sensors interested in listening to notifications from this gateway",
      "type": "array",
      "items": {
       "$ref": "#/definitions/v1alpha1.SensorNotificationWatcher"
      }
     }
    }
   },
   "v1alpha1.SensorNotificationWatcher": {
    "description": "SensorNotificationWatcher is the sensor interested in listening to notifications from this gateway",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "description": "Name is name of the sensor",
      "type": "string"
     }
    }
   }
  }
 }