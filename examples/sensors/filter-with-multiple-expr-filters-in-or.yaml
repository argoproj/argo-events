# Event Payload
#
#  {
#    "a": "b",
#    "a-longer-name": 10,
#    "nested": {
#      "path": {
#        "can-get": {
#          "longer": false
#        }
#      }
#    }
#  }
#

apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: with-multiple-expr-filters-in-or
spec:
  dependencies:
    - name: test-dep
      eventSourceName: webhook
      eventName: example
      filters:
        # If event payload passes either one of the following filters, the event is considered a valid event.
        exprLogicalOperator: "or"
        exprs:
          - expr: a == "b" || c != 10   # FALSE
            # In 'fields', 'name' works as a small alias used inside 'expr' above,
            # while 'path' refers to a potentially-long JSON path in the payload.
            fields:
              - name: a
                path: a
              - name: c
                path: a-longer-name
          - expr: e == false   # true
            fields:
              - name: e
                path: nested.path.can-get.longer
        # result: EVENT PASS
  triggers:
    - template:
        name: workflow
        k8s:
          operation: create
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: workflow-
              spec:
                entrypoint: whalesay
                arguments:
                  parameters:
                    - name: message
                      # value will get overridden by the event payload
                      value: hello world
                templates:
                  - name: whalesay
                    inputs:
                      parameters:
                        - name: message
                    container:
                      image: docker/whalesay:latest
                      command: [cowsay]
                      args: ["{{inputs.parameters.message}}"]
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: name
              dest: spec.arguments.parameters.0.value
