# ======================================================================================================================
# SEE ALSO
#   - Set up guide:   https://argoproj.github.io/argo-events/setup/gcp-pub-sub/
#   - Specification:  https://github.com/argoproj/argo-events/blob/stable/api/event-source.md#pubsubeventsource
# ----------------------------------------------------------------------------------------------------------------------

apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: gcp-pubsub
spec:
  pubSub:
    example:
      # (optional) jsonBody specifies that all event body payload coming from this
      # source will be JSON
      jsonBody: true
      # (optional) GCP project ID for the subscription.
      # Required if you run Argo Events outside of GKE/GCE.
      # (otherwise, the default value is its project)
      projectID: argo-events-XXXXX
      # (optional) GCP project ID for the topic.
      # By default, it is same as ProjectID.
      # topicProjectID: "project-id"
      # (optional) Topic to which the subscription should belongs.
      # Required if you want the eventsource to create a new subscription.
      # If you specify this field along with an existing subscription,
      # it will be verified whether it actually belongs to the specified topic.
      topic: test
      # (optional) ID of subscription.
      # Required if you use existing subscription.
      # The default value will be auto generated hash based on this eventsource setting, so the subscription
      # might be recreated every time you update the setting, which has a possibility of event loss.
      subscriptionID: test-sub
      # (optional) Refers to a k8s secret which contains the credential JSON to access pubsub.
      # If it is missing, it implicitly uses Workload Identity.
      credentialSecret:
        name: my-secret
        key: secret-key
      # Deprecated, legacy approach
      # credentialsFile: ""

# ----------------------------------------------------------------------------------------------------------------------
# followings are example for using Workload Identity

#   template:
#     serviceAccountName: my-sa
#     # (optional) you can add a PUBSUB_EMULATOR_HOST environment variable to the EventSource pod to connect
#     # to a PubSub emulator (no credentials needed)
#     container:
#       env:
#         - name: PUBSUB_EMULATOR_HOST
#           value: pubsub-emulator:9030
#   pubSub:
#     example-workload-identity:
#       # (optional) jsonBody specifies that all event body payload coming from this
#       # source will be JSON
#       jsonBody: true
#       # (optional on GCP) GCP project ID for the subscription.
#       # If you run Argo Events on GCP, the default value is its project (otherwise, it is required)
#       projectID: argo-events-XXXXX
#       # (optional) GCP project ID for the topic, same as projectID by default
#       # topicProjectID: "project-id"
#       # (optional) Topic on which a subscription will be created. Optional if you use existing subscription
#       # (if you specified in such case, it will be verified whether it matches against the actual one)
#       topic: test
#       # (optional) ID of subscription.
#       # If the subscription does not exist, it will be newly created.
#       # The default value will be auto generated based on this eventsource setting, so the subscription
#       # might be recreated every time you update the setting, which has a possibility of event loss.
#       subscriptionID: test-sub
#       # (optional) Refers to a k8s secret which contains the credential JSON to access pubsub.
#       # If it is missing, it implicitly uses Workload Identity.
