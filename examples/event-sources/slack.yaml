apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: slack
spec:
  service:
    ports:
      - port: 12000
        targetPort: 12000
  slack:
    example-insecure:
      # hook contains configuration for the HTTP server running in the event-source.
      # Slack will send events to following port and endpoint
      webhook:
        # endpoint to listen events on
        endpoint: "/"
        # port to run HTTP server on
        port: "12000"
        # HTTP request method to allow. In this case, only POST requests are accepted
        method: POST
      # token contains information about K8s secret that stores the token
      token:
        # Name of the K8s secret that contains the token
        name: slack-secret
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is token
        key: tokenkey
      # signingSecret contains information about the K8s secret that stores
      # Slack Signing Secret used to sign every request from Slack
      signingSecret:
        # Name of the K8s secret that contains the signingSecret
        name: slack-secret
        # Key within the K8s secret whose corresponding value contains the
        # base64-encoded Slack signing secret
        key: signingSecret

    # with secure connection
    example-secure:
      webhook:
        endpoint: "/"
        port: "14000"
        method: "POST"
        # k8s secret that contains the cert
        serverCertSecret:
          name: my-secret
          key: cert-key
        # k8s secret that contains the private key
        serverKeySecret:
          name: my-secret
          key: pk-key
      token:
        name: slack-secret
        key: tokenkey
      signingSecret:
        # Name of the K8s secret that contains the signingSecret
        name: slack-secret
        # Key within the K8s secret whose corresponding value contains the
        # base64-encoded Slack signing secret
        key: signingSecret
