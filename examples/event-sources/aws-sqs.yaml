apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: aws-sqs-event-source
spec:
  type: "sqs"
  sqs:
    example:
      # accessKey contains information about K8s secret that stores the access key
      accessKey:
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is access key
        key: accesskey
        # Name of the K8s secret that contains the access key
        name: aws-secret
      # secretKey contains information about K8s secret that stores the secret key
      secretKey:
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is secret key
        key: secretkey
        # Name of the K8s secret that contains the secret key
        name: aws-secret
      # aws region
      region: "us-east-1"
      # name of the queue. The gateway resolves the url of the queue from the queue name.
      queue: "my-fake-queue-1"
      # Namespace where the event source will reside
      namespace: "argo-events"
      # The duration (in seconds) for which the call waits for a message to arrive in the queue before returning.
      # MUST BE > 0 AND <= 20
      waitTimeSeconds: 20

    example-without-credentials:
      # If AWS access credentials are already present on the Pod's IAM role running the Gateway,
      # the AWS session will utilize the existing config and hence we do not need to provide explicit credentials.
      region: "us-east-1"
      queue: "my-fake-queue-2"
      waitTimeSeconds: 20
