version: 2
jobs:
  install_dep:
    docker:
      - image: golang:1.13.7-alpine
    working_directory: /go/src/github.com/argoproj/argo-events
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-dep-cache-{{ checksum "Gopkg.lock" }}-v4
            - go-dep-cache-
      - run:
          name: Install dependencies
          command: |
            apk update && apk add curl git build-base bash
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep version
            dep ensure -v
      - save_cache:
          key: go-dep-cache-{{ checksum "Gopkg.lock" }}-v4
          paths:
            - ./vendor
  # test runs the unit tests and stores test results in TEMP_RESULTS
  test:
    docker:
      - image: golang:1.13.7
    working_directory: /go/src/github.com/argoproj/argo-events
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-dep-cache-{{ checksum "Gopkg.lock" }}-v4
            - go-dep-cache-
      - run:
          name: Run unit tests
          command: make test
  # build runs the build of the linux artifacts and persists the packages to the circleci workspace
  build:
    docker:
      - image: golang:1.13.7
    working_directory: /go/src/github.com/argoproj/argo-events
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-dep-cache-{{ checksum "Gopkg.lock" }}-v4
            - go-dep-cache-
      - run: go get -u github.com/gobuffalo/packr/packr
      - run:
          name: Build Linux Artifact
          command: make all
      - persist_to_workspace:
          root: .
          paths:
            - ./dist/argo-events-linux-amd64.tar.gz
  # push_bin pushes both the linux and mac binaries to a github release when a new tag is added to the project
  push_bin:
    environment:
      - CIRCLE_PROJECT_USERNAME: argoproj
      - CIRCLE_PROJECT_REPONAME: argo-events
    docker:
      - image: golang:alpine
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Publish Release Binaries to GitHub
          command: |
            export VERSION=$(cat ./VERSION)
            apk add git
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./dist/

#TODO: add contexts to share env variables between different jobs
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - install_dep:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
      - push_bin:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              # only recognise tags with semantic versioning e.g. 0.1.0
              only: /^\d+\.\d+\.\d+.*$/
